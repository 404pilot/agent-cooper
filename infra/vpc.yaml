AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Parameters:
  ProjectName:
    Type: String
  Stage:
    Type: String

Outputs:
  VpcSubnetId1:
    Value: !Ref PublicSubnet1
  SecurityGroupId:
    Value: !GetAtt ProjectVpc.DefaultSecurityGroup

Resources:
  ProjectVpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/20
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName} VPC"

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "${ProjectName} security group"
      GroupName: !Sub "${ProjectName}-sg"
      VpcId: !Ref ProjectVpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-default-sg"

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref ProjectVpc
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName} Public-Subnet1"

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName} IGW"

  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref ProjectVpc
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref ProjectVpc
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName} public route table 1"

  PublicRoute1:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable1
