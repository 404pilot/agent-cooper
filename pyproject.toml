[tool.poetry]
name = "aws-notifier"
version = "0.1.0"
description = "Send out notifications automatically with AWS free services"
authors = ["404pilot <404pilot@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
taskipy = "^1.1.2"

[tool.poetry.scripts]

[tool.taskipy.tasks]
sam_clean = "rm -rf .aws-sam"

s3_prep = """
    aws s3api head-bucket \
        --profile "${AWS_PROFILE}" \
        --bucket "${PROJECT_NAME}-${STAGE}-${AWS_DEFAULT_REGION}" \
        --no-cli-pager \
        || ( aws s3 mb \
        --profile "${AWS_PROFILE}" \
        --region "${AWS_DEFAULT_REGION}" \
        --no-cli-pager \
        "s3://${PROJECT_NAME}-${STAGE}-${AWS_DEFAULT_REGION}" \
        && aws s3api put-bucket-tagging \
        --profile "${AWS_PROFILE}" \
        --region "${AWS_DEFAULT_REGION}" \
        --bucket "${PROJECT_NAME}-${STAGE}-${AWS_DEFAULT_REGION}" \
        --tagging "TagSet=[{Key=Project,Value=${PROJECT_NAME}}]" \
        --no-cli-pager )
"""

sam_build = """
    sam build \
        --debug \
        --template-file ./infra/template.yaml \
        --profile "${AWS_PROFILE}" \
        --region "${AWS_DEFAULT_REGION}" \
        --parameter-overrides "\
            ProjectName=${PROJECT_NAME} \
            Stage=${STAGE} \
        "
"""

sam_deploy = """
    sam deploy \
        --debug \
        --stack-name "${PROJECT_NAME}-${STAGE}-${AWS_DEFAULT_REGION}" \
        --s3-bucket "${PROJECT_NAME}-${STAGE}-${AWS_DEFAULT_REGION}" \
        --s3-prefix "infra/project" \
        --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM CAPABILITY_IAM \
        --region "${AWS_DEFAULT_REGION}" \
        --profile "${AWS_PROFILE}" \
        --parameter-overrides "\
            ProjectName=${PROJECT_NAME} \
            Stage=${STAGE} \
        " \
        --tags Project=${PROJECT_NAME} \
        --no-fail-on-empty-changeset
"""

aws_delete_stack = """
    aws cloudformation delete-stack \
        --debug \
        --stack-name "${PROJECT_NAME}-${STAGE}-${AWS_DEFAULT_REGION}" \
        --region "${AWS_DEFAULT_REGION}" \
        --profile "${AWS_PROFILE}" \
        --no-cli-pager
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
